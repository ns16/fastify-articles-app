// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  username    String    @db.VarChar(100) @unique
  password    String    @db.Char(60)
  email       String    @db.VarChar(100) @unique
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  articles    Article[]

  @@map("users")
}

model Article {
  id          Int       @id @default(autoincrement())
  user_id     Int
  title       String    @db.VarChar(100)
  description String    @db.VarChar(500)
  status      Status
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  user        User?     @relation(fields: [user_id], references: [id])
  content     Content?
  tags        Tag[]     @relation("articles_tags")

  @@map("articles")
}

model Content {
  id          Int       @id @default(autoincrement())
  article_id  Int       @unique
  body        String    @db.Text
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  article     Article?  @relation(fields: [article_id], references: [id])

  @@map("contents")
}

model Tag {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  articles    Article[] @relation("articles_tags")

  @@map("tags")
}

model Admin {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  username    String    @db.VarChar(100) @unique
  password    String    @db.Char(60)
  email       String    @db.VarChar(100) @unique
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  @@map("admins")
}

enum Status {
  published
  draft
}
